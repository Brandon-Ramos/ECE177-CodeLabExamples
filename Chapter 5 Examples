Q = Question     A = Answer     W = Why

Q   Write a statement that calls printTodaysdate, it accepts no parameters and returns no value.
A   void printTodaysdate();   
W   This is a basic function call, it causes a functions statement to be executed.


Q   Write a statement calling the function printError, passing it the value 14.
A   printError(14);
W   What is in the parentheses is the parameter we are passing through the function. We could add multiple parameters by separating the
    values with commas.


Q   add is a function that accepts two int parameters and returns their sum. Two int variables, euroSales and asiaSales, have already
    been declared and initialized. Another int variable, eurasiaSales, has already been declared. Write a statement that calls add to 
    compute the sum of euroSales and asiaSales and store this value in eurasiaSales.
A   eurasiaSales = add(euroSales, asiaSales);
W   Notice what the function add does in the question. It accepts two int parameters that we pass through it and adds them together. So
    we want to call the add function and pass it the variasbles (parameters) euroSales and asiaSales, Finally, we want to store the sum
    in the variable eurasiaSales. So we set eurasiaSales equal to the function add with the two parameters being passed through it.
    
    
Q   max is a function that accepts two int parameters and returns the value of the larger one. Four int variables, population1, 
    population2, population3, and population4 have already been declared and initialized. Write an expression (not a statement!) whose 
    value is the largest of population1, population2, population3, and population4 by calling max. 
A   max(population1, max(population2, max(population3, population4)))
W   Operator precedence is everything here. The first function to be evaluated is the max(population3, population4) function. It will 
    take the larger of the two vaules and return it. Next max(population2, max) is evaluated. Notice that population2 is now being 
    evaluated against the new value of the function max. Now the final max(population1, max) expression is evaluated.


Q   Write the definition of a function printDottedLine, which has no parameters and doesn't return anything. The function prints to 
    standard output a single line (terminated by a new line character) consisting of 5 periods.
A   printDottedLine(){         //void printDottedLine(){ also works
        printf(".....\n");
    }
W   The definition of the function printDottedLine doesn't accept any parameters. To declare this simply call the function without 
    passing through it any parameters (printDottedLine(){). The next step is to print a single line of 5 periods terminated by a new 
    line(printf(".....\n");).
    
    
Q   Write the definition of a function printGrade, which has a char parameter and returns nothing. The function prints on a line by
    itself the message string Grade: followed by the char parameter to standard output. Don't forget to put a new line character at 
    the end of your line.
A   void printGrade(char Grade){
        printf("Grade: %c\n", Grade);
    }
W   The parameter that is being passed through the function isn't directly stated but it is Grade. So start by setting of the definition
    of the function printGrade and pass thorugh it the character parameter Grade (void printGrade(char Grade){). Next we want to print 
    Grade: followed by the char parameter (printf("Grade: %c\n", Grade);). So use the print f statement to print the message Grade: then
    use %c to read a character value. 
    
    
Q   Write the definition of the function twice, which receives an interger parameter and returns an integer that is twice the value of
    the parameter. 
A   twice(int a){
        return a * 2;
    }
W   This function returns a value so we cannot use void here, I think that's the reason why. All we have to do is declare and initialize
    some variable that we can later return, in this case I have passed an integer 'a' through the function. Finally just write the 
    return statement to return twice the integer you passed through the function. 


Q   Write the definition of a function dashedLine, with one parameter, an int. If the parameter is negative or zero, the function does
    nothing. Otherwise it prints a complete line terminated by a new line character to standard output consisting of dashes (hyphens) 
    with the parameter's value determining the number of dashes. The function returns nothing.
A   dashedLine(int a){
    if(a > 0){
        int i;
        for(i = 0; i < a; i++){
          printf("-");
        }
        printf("\n");
        }
    }
W   To start, the function dashedLine has one parameter, an int. For the question above I declared the variable 'a' as the integer 
    parameter (dashedLine(int a)). Now, if the function is zero or less it will do nothing so set up the if statement to to loop for
    when a is greater than zero (if(a > 0){). Next we have to use a for loop to loop depending on the users input. The above for loop 
    works because even if the variable 'a' is 1, the variable 'i' is set equal to zero so i < a is true so a single hyphen would print.
    
    
Q   Given the integer variables x, y, and z, write a fragment of code that assigns the smallest of x, y, and z to another integer
    variable min.
A   min = x;
    if(y < min)
    min = y; 
    if(z < min)
    min = z;
W   Assign the value of the variable x to the variable min. After min hasa been assigned a value we can test it against the other 
    variables we have. If y is less than min then the value of y is stored in min. Lastly, if z is less than min then the value of z is
    stored in min. 
